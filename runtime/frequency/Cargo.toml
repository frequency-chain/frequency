[package]
authors = ["Frequency"]
description = "Runtime for Frequency mainnet"
edition = "2021"
homepage = "https://frequency.xyz"
license = "Apache-2.0"
name = "frequency-runtime"
repository = "https://github.com/frequency-chain/frequency/"
version = "0.0.0"

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[build-dependencies]
substrate-wasm-builder = { workspace = true, optional = true }

[dependencies]
parity-scale-codec = { workspace = true, features = ["derive"] }
hex = { workspace = true, default-features = false }
hex-literal = { workspace = true }
log = { workspace = true }
scale-info = { workspace = true, features = ["derive"] }

serde = { workspace = true, optional = true, features = ["derive"] }
serde_json = { workspace = true, optional = true, features = ["alloc"] }

smallvec = { workspace = true }
# Substrate
frame-benchmarking = { workspace = true, optional = true }
frame-executive = { workspace = true }
frame-support = { workspace = true }
frame-system = { workspace = true }
frame-system-benchmarking = { workspace = true, optional = true }
frame-system-rpc-runtime-api = { workspace = true }
frame-try-runtime = { workspace = true, optional = true }
frame-metadata-hash-extension = { workspace = true }

pallet-aura = { workspace = true }
pallet-authorship = { workspace = true }
pallet-balances = { workspace = true }
pallet-preimage = { workspace = true }
pallet-scheduler = { workspace = true }
pallet-democracy = { workspace = true }
pallet-collective = { workspace = true }
pallet-session = { workspace = true }
pallet-sudo = { workspace = true }
pallet-multisig = { workspace = true }
pallet-timestamp = { workspace = true }
pallet-transaction-payment = { workspace = true }
pallet-transaction-payment-rpc-runtime-api = { workspace = true }
pallet-utility = { workspace = true }
pallet-proxy = { workspace = true }

sp-api = { workspace = true }
sp-block-builder = { workspace = true }
sp-consensus-aura = { workspace = true }
sp-core = { workspace = true }
sp-inherents = { workspace = true }
sp-io = { workspace = true }
sp-genesis-builder = { workspace = true }
static_assertions = { workspace = true }

sp-offchain = { workspace = true }
sp-runtime = { features = ["serde"], workspace = true }
sp-session = { workspace = true }
sp-transaction-pool = { workspace = true }
sp-version = { workspace = true }
# Ported Pallet from ORML
pallet-time-release = { path = "../../pallets/time-release", default-features = false }
pallet-treasury = { path = "../../pallets/treasury", default-features = false }
# Frequency
common-primitives = { default-features = false, path = "../../common/primitives" }
common-runtime = { path = "../common", default-features = false }
pallet-capacity = { path = "../../pallets/capacity", default-features = false }
pallet-capacity-runtime-api = { path="../../pallets/capacity/src/runtime-api", default-features = false }
pallet-frequency-tx-payment = { path = "../../pallets/frequency-tx-payment", default-features = false }
pallet-frequency-tx-payment-runtime-api = { path = "../../pallets/frequency-tx-payment/src/runtime-api", default-features = false }
pallet-messages = { path = "../../pallets/messages", default-features = false }
pallet-messages-runtime-api = { path = "../../pallets/messages/src/runtime-api", default-features = false }
pallet-msa = { path = "../../pallets/msa", default-features = false }
pallet-msa-runtime-api = { path = "../../pallets/msa/src/runtime-api", default-features = false }
pallet-schemas = { path = "../../pallets/schemas", default-features = false }
pallet-schemas-runtime-api = { path = "../../pallets/schemas/src/runtime-api", default-features = false }
pallet-stateful-storage = { path = "../../pallets/stateful-storage", default-features = false }
pallet-stateful-storage-runtime-api = { path = "../../pallets/stateful-storage/src/runtime-api", default-features = false }
pallet-handles = { path = "../../pallets/handles", default-features = false }
pallet-handles-runtime-api = { path = "../../pallets/handles/src/runtime-api", default-features = false }
pallet-passkey = { path = "../../pallets/passkey", default-features = false }
system-runtime-api = { path = '../system-runtime-api', default-features = false }
# Polkadot
polkadot-parachain-primitives = { workspace = true }
polkadot-runtime-common = { workspace = true }
# Cumulus
cumulus-pallet-aura-ext = { workspace = true }
cumulus-pallet-parachain-system = { workspace = true }
cumulus-pallet-session-benchmarking = { workspace = true }
cumulus-pallet-weight-reclaim = { workspace = true }
cumulus-primitives-core = { workspace = true }
cumulus-primitives-timestamp = { workspace = true }
cumulus-primitives-aura = { workspace = true }
pallet-collator-selection = { workspace = true }
parachain-info = { workspace = true }
sp-debug-derive = { workspace = true, optional = true }

[features]
default = ["std"]
std = [
  "common-primitives/std",
  "cumulus-pallet-aura-ext/std",
  "cumulus-pallet-parachain-system/std",
  "cumulus-pallet-weight-reclaim/std",
  "cumulus-primitives-aura/std",
  "cumulus-primitives-core/std",
  "cumulus-primitives-timestamp/std",
  "frame-executive/std",
  "frame-support/std",
  "frame-system-rpc-runtime-api/std",
  "frame-system/std",
  "log/std",
  "pallet-aura/std",
  "pallet-authorship/std",
  "pallet-balances/std",
  "pallet-capacity/std",
  "pallet-capacity-runtime-api/std",
  "pallet-collator-selection/std",
  "pallet-collective/std",
  "pallet-democracy/std",
  "pallet-frequency-tx-payment-runtime-api/std",
  "pallet-frequency-tx-payment/std",
  "pallet-handles-runtime-api/std",
  "pallet-handles/std",
  "pallet-passkey/std",
  "pallet-messages-runtime-api/std",
  "pallet-messages/std",
  "pallet-msa-runtime-api/std",
  "pallet-msa/std",
  "pallet-multisig/std",
  "pallet-preimage/std",
  "pallet-proxy/std",
  "pallet-scheduler/std",
  "pallet-schemas-runtime-api/std",
  "pallet-schemas/std",
  "pallet-session/std",
  "pallet-stateful-storage-runtime-api/std",
  "pallet-stateful-storage/std",
  "pallet-sudo/std",
  "pallet-time-release/std",
  "pallet-timestamp/std",
  "pallet-transaction-payment-rpc-runtime-api/std",
  "pallet-transaction-payment/std",
  "pallet-treasury/std",
  "pallet-utility/std",
  "parachain-info/std",
  "parity-scale-codec/std",
  "polkadot-parachain-primitives/std",
  "polkadot-runtime-common/std",
  "scale-info/std",
  "serde/std",
  "serde_json/std",
  "sp-api/std",
  "sp-block-builder/std",
  "sp-consensus-aura/std",
  "sp-core/std",
  "sp-inherents/std",
  "sp-io/std",
  "sp-offchain/std",
  "sp-runtime/std",
  "sp-session/std",
  "cumulus-pallet-session-benchmarking/std",
  "sp-transaction-pool/std",
  "sp-genesis-builder/std",
  "common-runtime/std",
  "sp-version/std",
  "system-runtime-api/std",
  "substrate-wasm-builder",
  "frame-metadata-hash-extension/std",
]
runtime-benchmarks = [
  "cumulus-pallet-parachain-system/runtime-benchmarks",
  "cumulus-pallet-session-benchmarking/runtime-benchmarks",
  "cumulus-pallet-weight-reclaim/runtime-benchmarks",
  "frame-benchmarking/runtime-benchmarks",
  "frame-support/runtime-benchmarks",
  "frame-system-benchmarking",
  "frame-system-benchmarking/runtime-benchmarks",
  "frame-system/runtime-benchmarks",
  "pallet-balances/runtime-benchmarks",
  "pallet-capacity/runtime-benchmarks",
  "pallet-collator-selection/runtime-benchmarks",
  "pallet-collective/runtime-benchmarks",
  "pallet-democracy/runtime-benchmarks",
  "pallet-frequency-tx-payment/runtime-benchmarks",
  "pallet-handles/runtime-benchmarks",
  "pallet-passkey/runtime-benchmarks",
  "pallet-messages/runtime-benchmarks",
  "pallet-msa/runtime-benchmarks",
  "pallet-multisig/runtime-benchmarks",
  "pallet-preimage/runtime-benchmarks",
  "pallet-proxy/runtime-benchmarks",
  "pallet-scheduler/runtime-benchmarks",
  "pallet-schemas/runtime-benchmarks",
  "pallet-stateful-storage/runtime-benchmarks",
  "pallet-time-release/runtime-benchmarks",
  "pallet-timestamp/runtime-benchmarks",
  "pallet-treasury/runtime-benchmarks",
  "pallet-utility/runtime-benchmarks",
  "sp-runtime/runtime-benchmarks",
  "polkadot-runtime-common/runtime-benchmarks",
  "polkadot-parachain-primitives/runtime-benchmarks",
  "common-runtime/runtime-benchmarks",
]
try-runtime = [
  "cumulus-pallet-aura-ext/try-runtime",
  "cumulus-pallet-parachain-system/try-runtime",
  "cumulus-pallet-weight-reclaim/try-runtime",
  "frame-executive/try-runtime",
  "frame-system/try-runtime",
  "frame-try-runtime",
  "pallet-aura/try-runtime",
  "pallet-authorship/try-runtime",
  "pallet-balances/try-runtime",
  "pallet-capacity/try-runtime",
  "pallet-collator-selection/try-runtime",
  "pallet-collective/try-runtime",
  "pallet-democracy/try-runtime",
  "pallet-frequency-tx-payment/try-runtime",
  "pallet-handles/try-runtime",
  "pallet-passkey/try-runtime",
  "pallet-messages/try-runtime",
  "pallet-msa/try-runtime",
  "pallet-multisig/try-runtime",
  "pallet-preimage/try-runtime",
  "pallet-proxy/try-runtime",
  "pallet-scheduler/try-runtime",
  "pallet-schemas/try-runtime",
  "pallet-session/try-runtime",
  "pallet-stateful-storage/try-runtime",
  "pallet-sudo/try-runtime",
  "pallet-time-release/try-runtime",
  "pallet-timestamp/try-runtime",
  "pallet-transaction-payment/try-runtime",
  "pallet-treasury/try-runtime",
  "pallet-utility/try-runtime",
  "parachain-info/try-runtime",
  "common-runtime/try-runtime",
  "sp-runtime/try-runtime",
]
frequency = ["common-runtime/frequency", "pallet-msa/frequency"]
frequency-testnet = ["common-runtime/frequency-testnet", "pallet-msa/frequency-testnet"]
frequency-local = ["common-runtime/frequency-local"]
frequency-no-relay = ["common-runtime/frequency-no-relay"]
# Following features are used in generating lean wasms
no-metadata-docs = ["frame-support/no-metadata-docs"]
on-chain-release-build = ["metadata-hash", "sp-api/disable-logging"]

# Enable the metadata hash generation.
#
# This is hidden behind a feature because it increases the compile time.
# The wasm binary needs to be compiled twice, once to fetch the metadata,
# generate the metadata hash and then a second time with the
# `RUNTIME_METADATA_HASH` environment variable set for the `CheckMetadataHash`
# extension.
metadata-hash = ["substrate-wasm-builder/metadata-hash"]
frequency-lint-check = []
test = []
parameterized-consensus-hook = []
force-debug=[
	"sp-debug-derive/force-debug",
]

[lints]
workspace = true
