# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Merge PR
concurrency:
  group: ${{github.workflow}}-${{github.ref}}
  cancel-in-progress: true
on:
  push:
    branches:
      - main
# Set default permissions as restrictive
permissions:
  contents: read
  packages: read

jobs:
  publish-js-api-augment-rc:
    name: Merge - Publish JS API Augment Release Candidate
    runs-on: ubicloud-standard-4
    container: ghcr.io/frequency-chain/frequency/ci-base-image:1.5.7
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v4
      - name: Output Metadata
        # Run the cargo command and ignore any extra lines outside of the json result
        run: CARGO_INCREMENTAL=0 RUSTFLAGS="-D warnings" cargo run --features frequency-local -- export-metadata  --chain=frequency-paseo-local --tmp ./js/api-augment/metadata.json
      - name: Set up NodeJs
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "npm"
          registry-url: "https://registry.npmjs.org"
          cache-dependency-path: js/api-augment/package-lock.json
      - name: Install
        run: npm ci
        working-directory: js/api-augment
      - name: Build
        run: npm run build
        working-directory: js/api-augment
        env:
          FULL_SHA: ${{github.sha}}
      - name: Version Package
        env:
          FULL_SHA: ${{github.sha}}
        working-directory: js/api-augment/dist
        shell: bash
        run: npm version --new-version "v0.0.0-${FULL_SHA:0:6}" --no-git-tag-version
      - name: Publish on NPM @next
        run: npm publish --tag next --access public
        working-directory: js/api-augment/dist
        env:
          NODE_AUTH_TOKEN: ${{secrets.NODE_AUTH_TOKEN}}

  publish-js-ethereum-utils-rc:
    name: Build JS Ethereum utils
    runs-on: ubuntu-24.04
    container: ghcr.io/frequency-chain/frequency/ci-base-image:1.5.5
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v4
        with:
          ref: ${{env.RELEASE_BRANCH_NAME}}
      - name: Set up NodeJs
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
          registry-url: "https://registry.npmjs.org"
          cache-dependency-path: js/ethereum-utils/package-lock.json
      - name: Install
        run: npm ci
        working-directory: js/ethereum-utils
      - name: Build
        run: npm run build
        working-directory: js/ethereum-utils
        env:
          FULL_SHA: ${{github.sha}}
      - name: Version Package
        env:
          FULL_SHA: ${{github.sha}}
        working-directory: js/ethereum-utils/dist
        shell: bash
        run: npm version --new-version "v0.0.0-${FULL_SHA:0:6}" --no-git-tag-version
      - name: Publish on NPM @next
        run: npm publish --tag next --access public
        working-directory: js/ethereum-utils/dist
        env:
          NODE_AUTH_TOKEN: ${{secrets.NODE_AUTH_TOKEN}}

  publish-js-schemas-rc:
    name: Build JS Schemas
    runs-on: ubuntu-24.04
    container: ghcr.io/frequency-chain/frequency/ci-base-image:1.5.7
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v4
        with:
          ref: ${{env.RELEASE_BRANCH_NAME}}
      - name: Set up NodeJs
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
          registry-url: "https://registry.npmjs.org"
          cache-dependency-path: js/schemas/package-lock.json
      - name: Install
        run: npm ci
        working-directory: js/schemas
      - name: Build
        run: npm run build
        working-directory: js/schemas
        env:
          FULL_SHA: ${{github.sha}}
      - name: Version Package
        env:
          FULL_SHA: ${{github.sha}}
        working-directory: js/schemas/dist
        shell: bash
        run: npm version --new-version "v0.0.0-${FULL_SHA:0:6}" --no-git-tag-version
      - name: Publish on NPM @next
        run: npm publish --tag next --access public
        working-directory: js/schemas/dist
        env:
          NODE_AUTH_TOKEN: ${{secrets.NODE_AUTH_TOKEN}}

  publish-js-recovery-sdk-rc:
    name: Build JS Recovery SDK
    runs-on: ubuntu-24.04
    container: ghcr.io/frequency-chain/frequency/ci-base-image:1.5.7
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v4
        with:
          ref: ${{env.RELEASE_BRANCH_NAME}}
      - name: Set up NodeJs
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
          registry-url: "https://registry.npmjs.org"
          cache-dependency-path: js/recovery-sdk/package-lock.json
      - name: Install
        run: npm ci
        working-directory: js/recovery-sdk
      - name: Build
        run: npm run build
        working-directory: js/recovery-sdk
        env:
          FULL_SHA: ${{github.sha}}
      - name: Version Package
        env:
          FULL_SHA: ${{github.sha}}
        working-directory: js/recovery-sdk/dist
        shell: bash
        run: npm version --new-version "v0.0.0-${FULL_SHA:0:6}" --no-git-tag-version
      - name: Publish on NPM @next
        run: npm publish --tag next --access public
        working-directory: js/recovery-sdk/dist
        env:
          NODE_AUTH_TOKEN: ${{secrets.NODE_AUTH_TOKEN}}

  calc-code-coverage:
    name: Merge - Calculate Code Coverage
    runs-on: ubicloud-standard-30
    container: ghcr.io/frequency-chain/frequency/ci-base-image:1.5.7
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v4
      - name: Generate and Upload Code Coverage
        id: codecov
        uses: ./.github/workflows/common/codecov
        with:
          code-cov-token: ${{ secrets.CODECOV_TOKEN }}
