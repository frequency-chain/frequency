# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Build Westend
concurrency:
  group: ${{github.workflow}}-${{github.ref}}
  cancel-in-progress: true
on:
  push:

env:
  NIGHTLY_TOOLCHAIN: nightly-2025-04-03

jobs:
  build-binaries:
    name: Build Branch
    runs-on: ubicloud-standard-16
    container: ghcr.io/frequency-chain/frequency/ci-base-image:1.5.5
    env:
      BIN_DIR: target/release
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v4
      - name: Compile Binary
        run: |
          CARGO_INCREMENTAL=0 cargo build --locked --release \
            --features frequency-westend,frequency-bridging
      - name: Run Sanity Checks
        working-directory: ${{env.BIN_DIR}}
        run: |
          file frequency && \
            ./frequency --version
          mv frequency frequency-testnet-westend.amd64
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: artifacts-binary-testnet-westend-${{github.run_id}}
          path: ${{env.BIN_DIR}}/frequency-testnet-westend.amd64
          if-no-files-found: error

  release-node-images:
    needs: build-binaries
    name: Release ${{matrix.arch}} Node Docker Image for ${{matrix.network}}
    strategy:
      fail-fast: true
      matrix:
        arch: [amd64]
        network: [testnet-westend]
        build-profile: [release]
        docker-platform: [linux/amd64]
        release-file-name-prefix: [frequency-testnet-westend]
    env:
      DOCKER_HUB_PROFILE: frequencychain
      IMAGE_NAME: parachain-node
      NEW_RELEASE_TAG: v0.0.1
    runs-on: ubuntu-24.04
    steps:
      - name: Set Env Vars
        run: |
          echo "BIN_DIR=target/${{matrix.build-profile}}" >> $GITHUB_ENV
          echo "BUILT_BIN_FILENAME=frequency" >> $GITHUB_ENV
          echo "RELEASE_BIN_FILENAME=${{matrix.release-file-name-prefix}}.${{matrix.arch}}" >> $GITHUB_ENV
      - name: Check Out Repo
        uses: actions/checkout@v4
      - name: Download Binaries
        id: download-binaries
        uses: actions/download-artifact@v4
        with:
          pattern: artifacts-binary-${{matrix.network}}-${{github.run_id}}
          path: .
      - name: Extract and List Downloaded Binaries
        run: |
          download_dir=${{steps.download-binaries.outputs.download-path}}
          mv "${download_dir}"/artifacts*/* "${download_dir}"
          echo "Download dir: $download_dir"
          echo "Downloaded binaries: $(ls -l $download_dir)"
      - name: Move Binary to Target Dir
        run: |
          mkdir -p ${{env.BIN_DIR}}
          mv ${{env.RELEASE_BIN_FILENAME}} ${{env.BIN_DIR}}/${{env.BUILT_BIN_FILENAME}}
          chmod +x ${{env.BIN_DIR}}/${{env.BUILT_BIN_FILENAME}}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: ${{matrix.arch}}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{secrets.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_TOKEN}}
      - name: Build and Push Parachain Image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: ${{matrix.docker-platform}}
          push: true
          file: ./docker/${{env.IMAGE_NAME}}.dockerfile
          tags: |
            ${{env.DOCKER_HUB_PROFILE}}/${{env.IMAGE_NAME}}-${{matrix.network}}:${{env.NEW_RELEASE_TAG}}
