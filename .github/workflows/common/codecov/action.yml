name: Run Generation of Code Coverage
description: Runs cargo grcov
inputs:
  code-cov-token:
    description: "codecov token"
    required: true
runs:
  using: "composite"
  steps:
    - name: Install grcov
      shell: bash
      run: cargo install --locked grcov --version 0.9.0
    - name: Add llvm-tools
      shell: bash
      run: rustup component add llvm-tools-preview
    - name: Build
      shell: bash # Limited to 10 threads max
      run: cargo build -j 10 --features frequency-lint-check
      env:
        RUSTC_BOOTSTRAP: 1
        CARGO_INCREMENTAL: "0"
        RUSTFLAGS: "-Cinstrument-coverage -Ccodegen-units=1 -Copt-level=0 -Clink-dead-code -Coverflow-checks=off -Zpanic_abort_tests -Cpanic=abort"
        RUSTDOCFLAGS: "-Cpanic=abort"
    - name: Test
      shell: bash # Limited to 10 threads max
      run: cargo test -j 10 --features frequency-lint-check
      env:
        RUSTC_BOOTSTRAP: 1
        CARGO_INCREMENTAL: "0"
        RUSTFLAGS: "-Cinstrument-coverage -Ccodegen-units=1 -Copt-level=0 -Clink-dead-code -Coverflow-checks=off -Zpanic_abort_tests -Cpanic=abort"
        RUSTDOCFLAGS: "-Cpanic=abort"
    # There are a lot of things ignored here to make it all work
    # See the grcov docs for more information
    # excl rpc traits, and error enums
    # Only one of excl start and stop are allowed.
    - name: Generate code coverage
      shell: bash
      run: |
        grcov . -s . --binary-path ./target/debug/ -t lcov \
          --ignore-not-existing \
          --excl-start '(pub enum Error<T> \{|#\[rpc\()' \
          --excl-stop '\s*}$' \
          --ignore "target/*" \
          --ignore "node/*"  \
          --ignore "runtime/*" \
          --ignore "**/*weights.rs" \
          --ignore "**/benchmark*.rs" \
          --ignore "**/*tests.rs" \
          --ignore "**/tests/*.rs" \
          --ignore "**/*mock.rs" \
          --ignore "**/*runtime-api/src/lib.rs" \
          --ignore "*github.com*" \
          --ignore "*libcore*" \
          --ignore "*rustc*" \
          --ignore "*liballoc*" \
          --ignore "*cargo*" \
          -o ./target/debug/lcov.info
    - name: Upload to codecov.io
      uses: codecov/codecov-action@v5
      with:
        token: ${{inputs.code-cov-token}}
        files: ./target/debug/lcov.info
        fail_ci_if_error: false # optional (default = false)
        verbose: true # optional (default = false)
