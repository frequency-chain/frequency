# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Testnet Paseo E2E Tests
run-name: Testnet Paseo E2E Testing ${{github.event.inputs.release-version || github.ref_name}}
concurrency:
  group: ${{github.workflow}}-${{github.ref}}
  cancel-in-progress: true
on:
  workflow_dispatch:
    inputs:
      release-version:
        description: "Test Release version (v#.#.#[-rc#])"
        required: true
      ethereum-utils-version:
        description: "Ethereum utils version to use (v#.#.#[-rc#])"
        required: true

env:
  TAG_FROM_UI: ${{github.event.inputs.release-version}}
  ETHEREUM_UTILS_FROM_UI: ${{github.event.inputs.ethereum-utils-version}}

# Set default permissions as restrictive
permissions:
  contents: read

jobs:
  run-e2e-setup:
    name: Run E2E Test Prep
    outputs:
      test-files: ${{ steps.list-tests.outputs.files }}
    runs-on: ubuntu-latest
    steps:
      - name: Validate
        shell: bash
        run: |
          version=${{env.TAG_FROM_UI}}
          ethereum_utils_version=${{env.ETHEREUM_UTILS_FROM_UI}}
          echo "Release version entered in UI: $version"
          echo "Ethereum utils version entered in UI: $ethereum_utils_version"
          regex='^v([0-9]+)\.(0|([1-9][0-9]*))\.(0|([1-9][0-9]*))(-rc[1-9][0-9]*)?$'
          if [[ ! $version =~ $regex ]] || [[ ! $ethereum_utils_version =~ $regex ]]; then
            echo "ERROR: Entered version $version or ethereum_version $ethereum_utils_version is not valid."
            echo "Please use v#.#.#[-rc#] format."
            exit 1
          fi
      - name: Check Out Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{github.event.inputs.branch}}
      - name: Set Env Vars
        run: |
          echo "API_AUGMENT_VERSION=$(echo ${{ env.TAG_FROM_UI }} | sed 's/^v//')" >> $GITHUB_ENV
          echo "ETHEREUM_UTILS_VERSION=$(echo ${{ env.ETHEREUM_UTILS_FROM_UI }} | sed 's/^v//')" >> $GITHUB_ENV
      - name: Set up NodeJs
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "npm"
          cache-dependency-path: e2e/package-lock.json
      - name: Install Built api-augment
        run: npm install @frequency-chain/api-augment@${{ env.API_AUGMENT_VERSION }} @frequency-chain/ethereum-utils@${{ env.ETHEREUM_UTILS_VERSION }}
        working-directory: e2e
      - name: Fund e2e Tests
        working-directory: e2e
        env:
          CHAIN_ENVIRONMENT: paseo-testnet
          WS_PROVIDER_URL: ${{ vars.E2E_TESTNET_PASEO_RPC }}
          FUNDING_ACCOUNT_SEED_PHRASE: ${{ secrets.PASEO_E2E_TEST_SEED_PHRASE }}
        run: npm run test:relay-funding

      - name: Generate Test Matrix
        working-directory: e2e
        id: list-tests
        # Assuming tests are all *.test.ts
        run: |
          npm run test:relay-list
          echo "files=$(npm run --silent test:relay-list)"  >> "$GITHUB_OUTPUT"

  run-e2e:
    name: Run E2E Tests
    needs: run-e2e-setup
    strategy:
      # Even if one fails, keep the others going
      fail-fast: false
      matrix:
        test-file: ${{ fromJson(needs.run-e2e-setup.outputs.test-files) }}
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{github.event.inputs.branch}}
      - name: Set Env Vars
        run: |
          echo "API_AUGMENT_VERSION=$(echo ${{ env.TAG_FROM_UI }} | sed 's/^v//')" >> $GITHUB_ENV
          echo "ETHEREUM_UTILS_VERSION=$(echo ${{ env.ETHEREUM_UTILS_FROM_UI }} | sed 's/^v//')" >> $GITHUB_ENV
      - name: Set up NodeJs
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "npm"
          cache-dependency-path: e2e/package-lock.json
      - name: Install Built api-augment
        run: npm install @frequency-chain/api-augment@${{ env.API_AUGMENT_VERSION }} @frequency-chain/ethereum-utils@${{ env.ETHEREUM_UTILS_VERSION }}
        working-directory: e2e
      - name: E2E Test - ${{ matrix.test-file }}
        working-directory: e2e
        env:
          CHAIN_ENVIRONMENT: paseo-testnet
          WS_PROVIDER_URL: ${{ vars.E2E_TESTNET_PASEO_RPC }}
          FUNDING_ACCOUNT_SEED_PHRASE: ${{ secrets.PASEO_E2E_TEST_SEED_PHRASE }}
        run: npm run test:relay-single -- ${{ matrix.test-file }}
